{"version":3,"sources":["/home/kartik/Desktop/learn/angular2/crypto-pass/src/$_lazy_route_resource lazy","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/app.component.html","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/app.component.scss","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/app.component.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/app.module.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/add-password-modal/add-password-modal.component.html","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/add-password-modal/add-password-modal.component.scss","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/add-password-modal/add-password-modal.component.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/home/home.component.html","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/home/home.component.scss","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/home/home.component.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/login-register/login-register.component.html","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/login-register/login-register.component.scss","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/login-register/login-register.component.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/guards/auth-guard.service.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/guards/loggedin-redirect.service.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/models/service-details.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/modules/routing/routing.module.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/services/auth.service.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/services/crypto.service.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/app/services/indexed-db.service.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/environments/environment.ts","/home/kartik/Desktop/learn/angular2/crypto-pass/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  constructor() { \n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { IndexedDbService } from './services/indexed-db.service';\nimport { CryptoService } from './services/crypto.service';\n\nimport { RoutingModule, routingComponents } from './modules/routing/routing.module';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuardService } from './guards/auth-guard.service';\nimport { LoggedinRedirectService } from './guards/loggedin-redirect.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RoutingModule\n  ],\n  providers: [\n    IndexedDbService,\n    CryptoService,\n    AuthService,\n    AuthGuardService,\n    LoggedinRedirectService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/app.module.ts","module.exports = \"<div id=\\\"add-password-modal\\\" class=\\\"modal\\\">\\n\\n  <!-- Modal content -->\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n      <div class=\\\"title\\\">\\n        Add Password\\n      </div>\\n      <span class=\\\"close\\\" (click)=\\\"close()\\\">\\n        <i class=\\\"fa fa-times\\\"></i>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"modal-body\\\">\\n      <form class=\\\"add-password-form\\\" [formGroup]=\\\"addPasswordForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text pull-right\\\" name=\\\"service\\\" placeholder=\\\"Enter service name\\\" formControlName=\\\"service\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Enter user name / email\\\" formControlName=\\\"username\\\">\\n        </div>\\n        <div class=\\\"form-icon\\\">\\n          <input type=\\\"{{ showPassword ? 'text' : 'password'}}\\\" name=\\\"password\\\" placeholder=\\\"Enter password\\\" formControlName=\\\"password\\\">\\n          <i class=\\\"fa\\\" [class.fa-eye]=\\\"!showPassword\\\"  [class.fa-eye-slash]=\\\"showPassword\\\" (click)=\\\"togglePasswordVisibility()\\\"></i>\\n        \\n        </div>\\n\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"credential ? emitEdit() : emitSave()\\\" [disabled]=\\\"addPasswordForm.invalid\\\">\\n          {{credential? \\\"Edit\\\" : \\\"Save\\\"}}\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/add-password-modal/add-password-modal.component.html\n// module id = ../../../../../src/app/components/add-password-modal/add-password-modal.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".modal {\\n  display: none;\\n  /* Hidden by default */\\n  position: fixed;\\n  /* Stay in place */\\n  z-index: 1050;\\n  /* Sit on top */\\n  left: 0;\\n  top: 0;\\n  padding-top: calc(var(--header-size) + 20px);\\n  width: 100%;\\n  /* Full width */\\n  height: 100%;\\n  /* Full height */\\n  overflow: auto;\\n  /* Enable scroll if needed */\\n  background-color: black;\\n  /* Fallback color */\\n  background-color: rgba(0, 0, 0, 0.4);\\n  /* Black w/ opacity */ }\\n\\n/* Modal Content/Box */\\n\\n.modal-content {\\n  background-color: #fefefe;\\n  margin: 6% auto;\\n  /* 15% from the top and centered */\\n  padding: 5px 20px 10px 20px;\\n  width: 30%;\\n  /* Could be more or less, depending on screen size */\\n  -webkit-animation-name: animatetop;\\n          animation-name: animatetop;\\n  -webkit-animation-duration: 0.4s;\\n          animation-duration: 0.4s; }\\n\\n/* Add Animation */\\n\\n@-webkit-keyframes animatetop {\\n  from {\\n    top: -300px;\\n    opacity: 0; }\\n  to {\\n    top: 0;\\n    opacity: 1; } }\\n\\n@keyframes animatetop {\\n  from {\\n    top: -300px;\\n    opacity: 0; }\\n  to {\\n    top: 0;\\n    opacity: 1; } }\\n\\n@media screen and (max-width: 768px) {\\n  .modal-content {\\n    width: 80%; } }\\n\\n/* The Close Button */\\n\\n.close {\\n  color: #aaa;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold; }\\n\\n.close:hover,\\n.close:focus {\\n  color: #ff4747;\\n  text-decoration: none;\\n  cursor: pointer; }\\n\\n.modal-header {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 1fr 50px;\\n      grid-template-columns: 1fr 50px;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  justify-items: center; }\\n\\n.modal-header .title {\\n  font-style: var(--heading-font-family);\\n  font-size: 24px;\\n  padding: 20px 10px 0px 10px; }\\n\\n.modal-body {\\n  padding: 20px; }\\n\\n.add-password-form {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-rows: 1fr;\\n      grid-template-rows: 1fr;\\n  grid-gap: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/add-password-modal/add-password-modal.component.scss\n// module id = ../../../../../src/app/components/add-password-modal/add-password-modal.component.scss\n// module chunks = main","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Input,\n  Output,\n  ChangeDetectorRef\n} from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { ServiceDetails } from \"../../models/service-details\";\n@Component({\n  selector: \"app-add-password-modal\",\n  templateUrl: \"./add-password-modal.component.html\",\n  styleUrls: [\"./add-password-modal.component.scss\"]\n})\nexport class AddPasswordModalComponent implements OnInit {\n  @Output()\n  save: EventEmitter<ServiceDetails> = new EventEmitter<ServiceDetails>();\n  @Output()\n  edit: EventEmitter<ServiceDetails[]> = new EventEmitter<ServiceDetails[]>();\n  @Input() credential: ServiceDetails;\n  private addPasswordForm: FormGroup;\n  constructor(private fb: FormBuilder, private cd: ChangeDetectorRef) {}\n  showPassword: boolean = false;\n  ngOnInit() {\n    this.creatForm();\n  }\n\n  creatForm() {\n    this.addPasswordForm = this.fb.group({\n      service: [\n        this.credential ? this.credential.service : \"\",\n        Validators.required\n      ],\n      username: [\n        this.credential ? this.credential.username : \"\",\n        Validators.required\n      ],\n      password: [\n        this.credential ? this.credential.plaintextPassword : \"\",\n        Validators.required\n      ]\n    });\n  }\n\n  show(credential?: ServiceDetails) {\n    if (credential) {\n      this.credential = credential;\n      this.creatForm();\n      this.cd.detectChanges();\n    }\n    var modal = document.getElementById(\"add-password-modal\");\n    var body = document.querySelector(\"body\");\n    //console.log(modal);\n    modal.style.display = \"block\";\n    body.style.overflow = \"hidden\";\n  }\n  close() {\n    var modal = document.getElementById(\"add-password-modal\");\n    var body = document.querySelector(\"body\");\n    //console.log(modal);\n    modal.style.display = \"none\";\n    body.style.overflow = \"scroll\";\n    this.addPasswordForm.reset();\n    this.credential = null;\n    this.showPassword = false;\n  }\n  emitSave() {\n    this.save.emit({\n      service: this.addPasswordForm.controls.service.value,\n      username: this.addPasswordForm.controls.username.value,\n      plaintextPassword: this.addPasswordForm.controls.password.value\n    });\n    this.close();\n  }\n  emitEdit() {\n    let emitData: ServiceDetails[] = [];\n    emitData.push(this.credential);\n    emitData.push({\n      service: this.addPasswordForm.controls.service.value,\n      username: this.addPasswordForm.controls.username.value,\n      plaintextPassword: this.addPasswordForm.controls.password.value\n    });\n    this.edit.emit(emitData);\n    this.close();\n  }\n  togglePasswordVisibility(){\n    this.showPassword = !this.showPassword;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/add-password-modal/add-password-modal.component.ts","module.exports = \"<nav class=\\\"header header-fixed\\\">\\n\\n  <div class=\\\"\\\">\\n    CryptoPass\\n  </div>\\n  <div class=\\\"\\\">\\n    <button class=\\\"btn btn-accent change-icon\\\" style=\\\"width:85px\\\" (click)=\\\"openAddModal()\\\">\\n      New\\n      <i class=\\\"fa fa-pencil-square-o\\\"></i>\\n      <i class=\\\"fa fa-pencil-square\\\"></i>\\n    </button>\\n  </div>\\n\\n</nav>\\n<div class=\\\"container\\\">\\n  <div *ngFor=\\\"let credential of credentials\\\" class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n\\n      <div class=\\\"title\\\">\\n        {{credential.service}}\\n      </div>\\n\\n      <div class=\\\"copy-icon\\\" (click)=\\\"copyPassword($event, credential)\\\" [class.copy-password]=\\\"credential.plaintextPassword\\\" [class.disabled-fab-icon]=\\\"!credential.plaintextPassword\\\">\\n        <i class=\\\"fa fa-clone\\\"></i>\\n      </div>\\n      <div class=\\\"edit-password\\\" (click)=\\\"openEditModal(credential)\\\">\\n        <i class=\\\"fa fa-pencil\\\"></i>\\n      </div>\\n      <div class=\\\"card-close\\\" (click)=\\\"delete(credential)\\\">\\n        <i class=\\\"fa fa-trash-o fa-lg\\\"></i>\\n      </div>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <div>\\n        <span class=\\\"pull-left\\\">\\n          Username\\n        </span>\\n        <span class=\\\"pull-right\\\">\\n          {{credential.username}}\\n        </span>\\n      </div>\\n      <div class=\\\"card-content-plaintext-password clearfix plaintext-password\\\" [class.slide-down]=\\\"credential.plaintextPassword\\\">\\n        {{credential.plaintextPassword}}\\n      </div>\\n    </div>\\n    <div class=\\\"actions\\\">\\n      <button class=\\\"btn btn-primary change-icon\\\" (click)=\\\"revealPassword(credential)\\\" [disabled]=\\\"credential.plaintextPassword\\\">\\n        Reveal Password\\n        <i class=\\\"fa fa-lock\\\"></i>\\n        <i class=\\\"fa fa-unlock\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n<button class=\\\"fab-icon fab-icon-fixed mobile-only\\\" (click)=\\\"openAddModal()\\\">\\n  <i class=\\\"fa fa-pencil-square fa-lg\\\"></i>\\n</button>\\n<app-add-password-modal (save)=\\\"savePassword($event)\\\" (edit)=\\\"editPassword($event)\\\"></app-add-password-modal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/home/home.component.scss\n// module id = ../../../../../src/app/components/home/home.component.scss\n// module chunks = main","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { IndexedDbService } from \"../../services/indexed-db.service\";\nimport { AddPasswordModalComponent } from \"../add-password-modal/add-password-modal.component\";\nimport { CryptoService } from \"../../services/crypto.service\";\nimport { ServiceDetails } from \"../../models/service-details\";\nimport * as Rx from \"rxjs\";\nimport { Observable } from \"rxjs/Observable\";\nimport * as encoder from 'text-encoding';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  serviceName: string;\n  userName: string;\n  password: string;\n  credentials: Object[];\n  @ViewChild(AddPasswordModalComponent) addComponent: AddPasswordModalComponent;\n  constructor(\n    private dbservice: IndexedDbService,\n    private cryptoService: CryptoService,\n    private cd: ChangeDetectorRef\n  ) { }\n  async ngOnInit() {\n    this.getCredentials();\n  }\n  openAddModal() {\n    // this.dbservice.addPassword(this.serviceName, this.userName, this.password).then((data) => {\n    //   alert('Password added');\n    // })\n    this.addComponent.show();\n  }\n  async openEditModal(credentails: ServiceDetails) {\n    let secret = await this.dbservice.getSecretKey();\n    let password = await  this.cryptoService.decrypt(credentails.password, secret);\n    this.addComponent.show({\n      _id: credentails._id,\n      service: credentails.service,\n      username: credentails.username,\n      plaintextPassword: password\n    });\n  }\n  getCredentials() {\n    this.dbservice.getPasswords().then(res => {\n      this.credentials = res;\n      console.log(\"Password list\", this.credentials);\n      this.cd.detectChanges();\n    });\n  }\n  copyPassword(event: Event, credentail: ServiceDetails) {\n    console.log(\"copy clipboard\");\n    if (!credentail.plaintextPassword) return;\n\n    const element = event.target as Element; // extract the target from event\n    const cardNode =\n      element.nodeName == \"I\"\n        ? element.parentElement.parentElement.parentElement\n        : element.parentElement.parentElement; //get the card node depending on if the element is I or it's parent DIV\n    const passwwordNode = cardNode.querySelector(\".plaintext-password\"); //select the password node\n\n    var range = document.createRange(); //using range you can select elements from the DOM\n    range.selectNode(passwwordNode);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(range); // add it to selection, so that the node gets selected\n    document.execCommand(\"Copy\"); //copy command\n    window.getSelection().removeAllRanges(); //clear the selection\n  }\n  async savePassword(userDetails: ServiceDetails) {\n    console.log(userDetails);\n    let checkSecret = await this.dbservice.getSecretKey();\n    let secret;\n    if (checkSecret) {\n      secret = checkSecret;\n      console.log(secret);\n    } else {\n      secret = await this.cryptoService.generateKeys();\n      this.dbservice.addSecretKey(secret).then(res => console.log(\"Key added\"));\n    }\n    let encData = await this.cryptoService.encrypt(userDetails.plaintextPassword, secret);\n    console.log('encrypted data', encData);\n    \n    this.dbservice\n      .addPassword(\n        userDetails.service,\n        userDetails.username,\n        encData\n      )\n      .then(res => console.log(\"saved\", res));\n    this.getCredentials();\n  }\n  async editPassword(userDetails: ServiceDetails[]) {\n    let secret = await this.dbservice.getSecretKey();\n    userDetails[1].password = await this.cryptoService.encrypt(\n      userDetails[1].plaintextPassword,\n      secret\n    );\n    userDetails[1].plaintextPassword = null;\n    console.log(\"Editing \", userDetails);\n    this.dbservice.editPassword(userDetails[0], userDetails[1]).then(res => {\n      console.log(\"Edit reponse\", res);\n      this.getCredentials();\n      this.cd.detectChanges();\n    });\n  }\n  async revealPassword(credentails: ServiceDetails) {\n    let secret = await this.dbservice.getSecretKey();\n    console.log(\"secret key\", secret);\n    console.log('Arraypass', credentails.password);\n    \n    let palintextPassword = await this.cryptoService.decrypt(\n      credentails.password,\n      secret\n    );\n    console.log(\"Your password is \", palintextPassword);\n    credentails.plaintextPassword = palintextPassword;\n    this.cd.detectChanges();\n    Rx.Observable.timer(5000).subscribe(res => {\n      console.log(\"time elapsed\");\n      credentails.plaintextPassword = \"\";\n      this.cd.detectChanges();\n    });\n  }\n\n  delete(credentail: ServiceDetails) {\n    this.dbservice.deletePassword(credentail).then(res => {\n      console.log(\"Delete res\", res);\n      this.getCredentials();\n      this.cd.detectChanges();\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/home/home.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"displayForm\\\" class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n\\n      <div class=\\\"title\\\">\\n        {{ login ? \\\"Login to \\\" : \\\"Register for\\\" }} CryptoPass\\n      </div>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <div class=\\\"form-icon\\\" tabindex=\\\"0\\\">\\n        <input type=\\\"{{ showPassword ? 'text' : 'password'}}\\\" name=\\\"password\\\" placeholder=\\\"Enter app passsword\\\" [(ngModel)]=\\\"password\\\" (keydown)=\\\"checkEnter($event)\\\">\\n        <i class=\\\"fa\\\" [class.fa-eye]=\\\"!showPassword\\\"  [class.fa-eye-slash]=\\\"showPassword\\\" (click)=\\\"togglePasswordVisibility()\\\"></i>\\n      </div>\\n    </div>\\n    <div class=\\\"actions\\\">\\n      <button class=\\\"btn btn-primary change-icon\\\" (click)=\\\"loginRegister()\\\">\\n        {{ login ? \\\"Login\\\" : \\\"Register\\\"}}\\n        <i class=\\\"fa fa-lock\\\"></i>\\n        <i class=\\\"fa fa-unlock\\\"></i>\\n      </button>\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/login-register/login-register.component.html\n// module id = ../../../../../src/app/components/login-register/login-register.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 1fr;\\n      grid-template-columns: 1fr;\\n  margin-left: 25%;\\n  margin-right: 25%; }\\n\\n.card-header {\\n  -ms-grid-columns: 1fr;\\n      grid-template-columns: 1fr; }\\n\\n.title {\\n  text-align: left; }\\n\\n.content {\\n  padding: 30px 50px 0px 50px;\\n  -ms-grid-rows: 1fr;\\n      grid-template-rows: 1fr; }\\n\\n@media screen and (max-width: 768px) {\\n  .container {\\n    margin-left: 5%;\\n    margin-right: 5%; }\\n  .content {\\n    padding: 30px 5% 0px 5%; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/login-register/login-register.component.scss\n// module id = ../../../../../src/app/components/login-register/login-register.component.scss\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-login-register\",\n  templateUrl: \"./login-register.component.html\",\n  styleUrls: [\"./login-register.component.scss\"]\n})\nexport class LoginRegisterComponent implements OnInit {\n  displayForm: boolean;\n  login: boolean;\n  password: string;\n  showPassword: boolean = false;\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.authService.isRegistered.subscribe(val => {});\n    this.authService\n      .checkIfRegisterd()\n      .then(val => {\n        console.log(val);\n        this.login = val ? true : false;\n        this.displayForm = true;\n      })\n      .catch(err => {\n        console.log(err);\n        this.login = false;\n        this.displayForm = true;\n      });\n  }\n  loginRegister() {\n    if (this.login) {\n      this.authService.login(this.password).then(res => {\n        console.log(res);\n        this.router.navigateByUrl(\"/home\");\n      }).catch(err => {\n        console.log(err);\n        \n      });\n    } else {\n      this.authService.register(this.password).then(res => {\n        console.log(\"Logged in successfully!\");\n        this.login = true;\n        this.loginRegister();\n        //Todo: Popup\n       \n      });\n    }\n  }\n  checkEnter(event: KeyboardEvent){\n    if(event.keyCode == 13){\n      //console.log('enter clicked');\n      this.loginRegister();\n    }\n  }\n  togglePasswordVisibility(){\n    console.log('toggl');\n    this.showPassword = !this.showPassword;\n    console.log(this.showPassword);\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/components/login-register/login-register.component.ts","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    try {\n      if (!this.auth.isLoggedIn()) {\n        this.router.navigate([\"login\"]);\n        return false;\n      }\n    } catch (err) {\n      console.log(err);\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n    this.auth.startLogoutTimer();\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/guards/auth-guard.service.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class LoggedinRedirectService implements CanActivate{\n\n  constructor(private auth : AuthService, private router: Router) { }\n\n  canActivate() : boolean {\n    console.log('Logged in guard');\n    \n    if(this.auth.isLoggedIn()){\n      this.router.navigateByUrl('/home');\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/guards/loggedin-redirect.service.ts","export class ServiceDetails {\n  _id?: number;\n  service: string;\n  username: string;\n  password?: ArrayBuffer;\n  plaintextPassword?: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/models/service-details.ts","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { LoginRegisterComponent } from \"../../components/login-register/login-register.component\";\nimport { HomeComponent } from \"../../components/home/home.component\";\nimport { AddPasswordModalComponent } from \"../../components/add-password-modal/add-password-modal.component\";\nimport { AuthGuardService as AuthGuard } from \"../../guards/auth-guard.service\";\nimport {  LoggedinRedirectService as LoggedIn } from \"../../guards/loggedin-redirect.service\";\n\nconst appRoutes: Routes = [\n  { path: \"\", redirectTo: \"/login\", pathMatch: \"full\" },\n  { path: \"home\", component: HomeComponent, canActivate: [AuthGuard] },\n  { path: \"login\", component: LoginRegisterComponent , canActivate: [LoggedIn]}\n];\n@NgModule({\n  imports: [CommonModule, RouterModule.forRoot(appRoutes)],\n  declarations: [],\n  exports: [RouterModule]\n})\nexport class RoutingModule {}\n\nexport const routingComponents = [\n  AddPasswordModalComponent,\n  LoginRegisterComponent,\n  HomeComponent\n];\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/modules/routing/routing.module.ts","import { Injectable, Output, EventEmitter } from \"@angular/core\";\nimport { IndexedDbService } from \"./indexed-db.service\";\nimport { CryptoService } from \"./crypto.service\";\nimport * as jwt from \"jsrsasign\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport * as Rx from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\nconst LOCALSTORAGE_TOKEN_KEY = \"auth-token\";\n\n@Injectable()\nexport class AuthService {\n  @Output() isRegistered: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n  jwtHelper = new JwtHelperService();\n  constructor(\n    private dbService: IndexedDbService,\n    private cryptService: CryptoService,\n    private router: Router\n  ) {\n  }\n  getToken(): string {\n    return localStorage.getItem(LOCALSTORAGE_TOKEN_KEY);\n  }\n  startLogoutTimer(){\n    let exp = this.jwtHelper.getTokenExpirationDate(this.getToken()).getTime();\n    let now = new Date().getTime();\n    let logoutTime = exp - now;\n    console.log(\"Time\", logoutTime);\n    Rx.Observable\n    .timer(logoutTime)\n    .subscribe(val =>{\n      console.log('Session expired');\n      this.removeToken();\n      this.router.navigateByUrl('/login');\n    })\n  }\n  removeToken() {\n    localStorage.removeItem(LOCALSTORAGE_TOKEN_KEY);\n  }\n  isLoggedIn(): Boolean {\n    return !this.jwtHelper.isTokenExpired(this.getToken());\n  }\n  checkIfRegisterd() {\n    return this.dbService.getHash();\n  }\n  generateJWT() {\n    // Header\n    var oHeader = { alg: \"HS256\", typ: \"JWT\" };\n    // Payload\n    var oPayload: any = {};\n    var tNow = jwt.jws.IntDate.get(\"now\");\n    var tEnd = jwt.jws.IntDate.get(\"now\") + 60 * 5;\n    oPayload.iss = window.location.hostname;\n    oPayload.nbf = tNow;\n    oPayload.iat = tNow;\n    oPayload.exp = tEnd;\n    // Sign JWT, password=616161\n    var sHeader = JSON.stringify(oHeader);\n    var sPayload = JSON.stringify(oPayload);\n    var sJWT = jwt.jws.JWS.sign(\"HS256\", sHeader, sPayload, \"616161\");\n    return sJWT;\n  }\n  async login(password: string) {\n    let hash = await this.cryptService.generateHash(password);\n    let storedHash = await this.dbService.getHash();\n    let key = await this.dbService.getSecretKey();\n    if (!key) {\n      key = await this.cryptService.generateKeys();\n      this.dbService.addSecretKey(key);\n    }\n    return new Promise((resolve, reject) => {\n      if (hash == storedHash) {\n        let token = this.generateJWT();\n        localStorage.setItem(\"auth-token\", token);\n        resolve(true);\n      } else {\n        reject(false);\n      }\n    });\n  }\n\n  async register(password: string) {\n    let hash = await this.cryptService.generateHash(password);\n    return this.dbService.addHash(hash);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/services/auth.service.ts","import { Injectable } from \"@angular/core\";\nimport * as encoding from \"text-encoding\";\nimport { KeyPair } from \"../models/key-pair\";\n\n@Injectable()\nexport class CryptoService {\n  dec = new encoding.TextDecoder();\n  constructor() { }\n  encrypt(password: string, keys: KeyPair) {\n    console.log(password, keys);\n    \n    console.log(new encoding.TextEncoder().encode(password));\n    \n    return window.crypto.subtle.encrypt(\n      {\n        name: \"RSA-OAEP\",\n        //label: Uint8Array([...]) //optional\n      },\n      keys.publicKey, //from generateKey or importKey above\n      new encoding.TextEncoder().encode(password) //ArrayBuffer of data you want to encrypt\n    )\n  }\n  decrypt(data: ArrayBuffer, keys: KeyPair): Promise<string> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        let decodedData: string = this.dec.decode(await window.crypto.subtle.decrypt(\n          {\n            name: \"RSA-OAEP\",\n            //label: Uint8Array([...]) //optional\n          },\n          keys.privateKey, //from generateKey or importKey above\n          data //ArrayBuffer of the data\n        ));\n        resolve(decodedData)\n      } catch (err) {\n        resolve(err);\n      }\n    })\n  }\n  generateKeys() {\n    return window.crypto.subtle.generateKey(\n      {\n        name: \"RSA-OAEP\",\n        modulusLength: 2048, //can be 1024, 2048, or 4096\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        hash: { name: \"SHA-256\" }, //can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n      },\n      false,\n      [\"encrypt\", \"decrypt\"]\n    )\n  }\n async generateHash(value: string){\n    let arrayHash = await window.crypto.subtle.digest(\"SHA-256\", new encoding.TextEncoder().encode(value));\n\n    return new encoding.TextDecoder().decode(arrayHash);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/services/crypto.service.ts","import { Injectable } from \"@angular/core\";\nimport * as zango from \"zangodb\";\nimport { ServiceDetails } from \"../models/service-details\";\nimport { KeyPair } from \"../models/key-pair\";\n@Injectable()\nexport class IndexedDbService {\n  private db: zango.Db;\n  private passwordsCollection: zango.Collection;\n  private keyCollection: zango.Collection;\n  private authCollection: zango.Collection;\n  constructor() {\n    this.db = new zango.Db(\"crypto-pass\", 2, {\n      passwords: [\"service\"],\n      key: [\"secret\"],\n      auth: [\"hash\"]\n    });\n    this.passwordsCollection = this.db.collection(\"passwords\");\n\n    this.keyCollection = this.db.collection(\"key\");\n\n    this.authCollection = this.db.collection(\"auth\");\n    this.getAll().then();\n  }\n  getAll(): Promise<any> {\n    return this.passwordsCollection.find({}).toArray();\n  }\n  addPassword(\n    service: string,\n    username: string,\n    password: ArrayBuffer\n  ): Promise<any> {\n    return this.passwordsCollection.insert({\n      service,\n      username,\n      password\n    });\n  }\n  getPasswords() {\n    return this.passwordsCollection.find({}).toArray();\n  }\n  editPassword(credetials: ServiceDetails, newCredentials: ServiceDetails) {\n    return this.passwordsCollection.update(\n      { _id: credetials._id },\n      {\n        service: newCredentials.service,\n        username: newCredentials.username,\n        password: newCredentials.password\n      }\n    );\n  }\n  deletePassword(credetials: ServiceDetails) {\n    return this.passwordsCollection.remove(credetials);\n  }\n  /* Key releated code */\n  async getSecretKey() {\n    let key: KeyPair = <KeyPair>await this.keyCollection.findOne({ _id: 1 });\n    return key ? key[\"secret\"] : null;\n  }\n  addSecretKey(secret: any): Promise<any> {\n    return this.keyCollection.insert({\n      secret\n    });\n  }\n\n  async getHash() {\n    let authInfo = await this.authCollection.findOne({ _id: 1 });\n\n    return authInfo ? authInfo[\"hash\"] : null;\n  }\n  addHash(hash: string): Promise<any> {\n    return this.authCollection.insert({\n      hash\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/app/services/indexed-db.service.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/kartik/Desktop/learn/angular2/crypto-pass/src/main.ts"],"sourceRoot":"webpack:///"}